# coding = utf-8

import requests
from .securety import Signature, KeySecret

GENERAL_ERRORS = {'0': '操作成功', '1': '操作全部失败', '2': '批量操作部分成功', '50000': 'body不能为空',
                  '50001': '撮合引擎正在升级，请稍后重试', '50002': '非法的json数据', '50004': '接口请求超时（不代表下单成功或失败，请检查订单状态）',
                  '50005': '接口已下线或无法使用', '50006': '无效的Content_Type，请使用"application/json"格式',
                  '50007': '用户被冻结', '50008': '用户不存在', '50009': '用户处于爆仓冻结', '50010': '用户ID为空',
                  '50011': '用户请求频率过快，超过该接口允许的限额', '50012': '用户状态无效', '50013': '当前系统繁忙，请稍后重试',
                  '50014': '必填参数{0}不能为空', '50015': '参数{0}和{1}不能同时为空', '50016': '参数{0}和{1}不匹配',
                  '50017': '当前仓位处于ADL冻结中，无法进行相关操作', '50018': '{0}币种处于ADL冻结中，无法进行相关操作',
                  '50019': '当前账户处于ADL冻结中，无法进行相关操作', '50020': '当前仓位处于强平冻结中，无法进行相关操作',
                  '50021': '{0}币种处于强平冻结中，无法进行相关操作', '50022': '当前账户处于强平冻结中，无法进行相关操作',
                  '50023': '资金费冻结，无法进行相关操作', '50024': '参数{0}和{1}不能同时存在', '50025': '参数{0}传值个数超过最大限制{1}',
                  '50026': '系统错误', '50027': '当前账户已被限制交易', '50028': '账户异常无法下单', '51000': '{0}参数错误',
                  '51001': '交易产品ID不存在', '51002': '交易产品ID不匹配指数', '51003': 'ordId或clOrdId至少填一个',
                  '51004': '委托数量超过用户当前档位', '51005': '委托数量大于单笔上限', '51006': '委托价格不在限价范围内',
                  '51007': '委托失败，委托数量不可小于', '51008': '委托失败，账户可用余额不足', '51009': '下单功能被平台冻结',
                  '51010': '账户等级不足', '51011': 'ordId重复', '51012': '币种不存在', '51014': '指数不存在',
                  '51015': 'instId和instType不匹配', '51016': 'clOrdId重复', '51017': '杠杆委托交易借币超出限额',
                  '51018': '期权交易账户不能有净空头持仓', '51019': '期权逐仓不能有净多头持仓', '51020': '委托数量必须超过单笔下限',
                  '51021': '合约待上线', '51022': '合约暂停中', '51023': '仓位不存在', '51024': '统一账户冻结',
                  '51025': '委托笔数超限', '51026': '交易产品类型不匹配指数（instType和uly不匹配）', '51027': '合约已到期',
                  '51028': '合约交割中', '51029': '合约结算中', '51030': '资金费结算中', '51031': '委托价格不在平仓限价范围内',
                  '51100': '币交易金额小于最小可交易金额', '51101': '超出单笔最大挂单张数', '51102': '超出合约最大挂单数量',
                  '51103': '超出标的最大挂单数量', '51104': '超出标的最大挂单张数', '51105': '超出合约最大可开张数',
                  '51106': '超出标的最大可开张数', '51107': '超出标的最大持仓张数', '51108': '持仓量超过市价全平最大限制',
                  '51109': '订单深度中无买一卖一价', '51110': '集合竞价开始后方可下限价单', '51111': '批量下单时，超过最大单数{0}',
                  '51112': '平仓张数大于该仓位的可平张数', '51113': '市价全平操作过于频繁', '51115': '市价全平前请先撤销所有平仓单',
                  '51116': '委托价格或触发价格超过{0}美元', '51117': '平仓单挂单单数超过限制', '51118': '委托总数量需大于单笔上限',
                  '51119': '下单失败，用户余额不足', '51120': '下单数量不足{0}张', '51121': '下单张数应为一手张数的倍数',
                  '51122': '委托价格小于最小值{0}', '51124': '价格发现期间您只可下限价单',
                  '51125': '当前杠杆存在非只减仓挂单，请撤销所有非只减仓挂单后进行只减仓挂单', '51126': '当前杠杆存在只减仓挂单，请撤销所有只减仓挂单后进行非只减仓挂单',
                  '51127': '仓位可用余额为0', '51128': '跨币种账户无法进行全仓杠杆交易', '51129': '持仓及买入订单价值已达到持仓限额，不允许继续买入',
                  '51130': '逐仓杠杆保证金币种错误', '51131': '仓位可用余额不足', '51132': '仓位正资产小于最小交易单位',
                  '51133': '跨币种全仓币币不支持只减仓功能', '51134': '平仓失败，请检查持仓和挂单', '51135': '您的平仓价格已触发限价，最高买入价格为{0}',
                  '51136': '您的平仓价格已触发限价，最低卖出价格为{0}', '51137': '您的开仓价格已触发限价，最高买入价格为{0}',
                  '51138': '您的开仓价格已触发限价，最低卖出价格为{0}', '51139': '交易账户下币币不支持只减仓功能', '51201': '市价委托单笔价值不能超过',
                  '51202': '市价单下单数量超出最大值', '51203': '普通委托数量超出最大限制{0}', '51204': '限价委托单价格不能为空',
                  '51205': '不支持只减仓操作', '51250': '策略委托价格不在正确范围内', '51251': '策略委托类型错误',
                  '51252': '策略委托数量不在正确范围内', '51253': '冰山委托单笔均值超限', '51254': '冰山委托单笔均值错误',
                  '51255': '冰山委托单笔委托超限', '51256': '冰山委托深度错误', '51257': '跟踪委托回调服务错误，回调幅度限制为{0}<x<={1}%',
                  '51258': '跟踪委托失败，卖单激活价格需大于最新成交价格', '51259': '跟踪委托失败，买单激活价格需小于最新成交价格',
                  '51260': '每个用户最多可同时持有{0}笔未成交的跟踪委托', '51261': '每个用户最多可同时持有{0}笔未成交的止盈止损',
                  '51262': '每个用户最多可同时持有{0}笔未成交的冰山委托', '51263': '每个用户最多可同时持有{0}笔未成交的时间加权单',
                  '51264': '时间加权单笔均值超限', '51265': '时间加权单笔上限错误', '51267': '时间加权扫单比例出错',
                  '51268': '时间加权扫单范围出错', '51269': '时间加权委托间隔错误，应为{0}<=x<={1}', '51270': '时间加权委托深度限制为',
                  '51271': '时间加权委托失败，扫单比例应该为', '51272': '时间加权委托失败，扫单范围应该为', '51273': '时间加权委托总量应为大于',
                  '51274': '时间加权委托总数量需大于单笔上限', '51275': '止盈止损市价单笔委托数量不能超过最大限制', '51276': '止盈止损市价单不能指定价格',
                  '51277': '止盈触发价格不能大于最新成交价', '51278': '止损触发价格不能小于最新成交价', '51279': '止盈触发价格不能小于最新成交价',
                  '51280': '止损触发价格不能大于最新成交价', '51400': '撤单失败，订单不存在', '51401': '撤单失败，订单已撤销',
                  '51402': '撤单失败，订单已完成', '51403': '撤单失败，该委托类型无法进行撤单操作', '51404': '价格发现第二阶段您不可撤单',
                  '51405': '撤单失败，您当前没有未成交的订单', '51406': '撤单数量超过最大允许单数{0}', '51407': 'ordIds',
                  '51408': '币对', '51409': '币对', '51410': '撤单失败，订单已处于撤销中', '51500': '价格和数量不能同时为空',
                  '51501': '修改订单超过最大允许单数{0}', '51502': '修改订单失败，用户保证金不足', '51503': '修改订单失败,订单不存在',
                  '51506': '订单类型不支持改单', '51508': '集合竞价第一阶段和第二阶段不允许改单', '51509': '修改订单失败,订单已撤销',
                  '51510': '修改订单失败,订单已完成', '51511': '修改订单失败,订单价格不满足Post', '51600': '查询订单的状态不存在',
                  '51601': '订单状态和订单id不能同时存在', '51602': '订单状态或订单id必须存在一个', '51603': '查询订单不存在',
                  '52000': '没有最新行情信息', '54000': '暂不支持币币杠杆业务', '54001': '只有跨币种全仓账户才能设置自动借币',
                  '58000': '获取母账户余额，{0}不支持', '58001': '交易密码错误', '58002': '请先开通余币宝服务', '58003': '余币宝不支持该币种',
                  '58004': '账户冻结', '58005': '赎回额度不可超过{0}', '58006': '币种{0}不支持当前操作',
                  '58007': '资金接口服务异常，请稍后再试。', '58100': '行权或结算中，暂无法转入或转出', '58101': '划转冻结',
                  '58102': '划转过于频繁，请降低划转频率', '58104': '您在法币区的交易异常，现已被限制划转功能，请您联系在线客服以解除限制',
                  '58105': '您在法币区的交易异常，现已被限制划转功能，请您在网页或APP进行法币划转操作以完成身份验证', '58106': '请先开通币币杠杆账户',
                  '58107': '请先开通交割合约账户', '58108': '请先开通期权合约账户', '58109': '请先开通永续合约账户',
                  '58110': '当前交易产品触发市场风控，平台已暂停相关用户的资金转出功能，请耐心等待', '58111': '永续合约正在收取资金费，暂时无法做资金划转，请稍后重试',
                  '58112': '资金划转失败，请稍后重试', '58114': '转账金额必须大于零（划转接口，金额输入不正确）', '58115': '子账户不存在',
                  '58116': '转出数量大于最大可转数量', '58117': '账户资产异常，请先处理负资产后再划转',
                  '58200': '该币种暂不支持从{0}提现至{1}，敬请谅解', '58201': '今日提现金额累计超过每日限额',
                  '58202': 'NEO最小提现数量为1，且提现数量必须为整数', '58203': '请先添加提现地址', '58204': '提现冻结',
                  '58205': '提现金额大于单笔提现最大金额（单笔提现最大金额提现接口，提现金额输入有误）',
                  '58206': '提现金额小于最小提现金额（最小提现金额提现接口，提现金额输入有误）', '58207': '提现失败，认证地址错误',
                  '58208': '提现失败，邮箱未绑定', '58209': '提现失败，子账号不允许', '58210': '提现手续费大于最大值（提现接口，提现手续费输入有误）',
                  '58211': '提现手续费小于最小值（提现接口，手续费输入有误）', '58212': '提现手续费应填写为提币数量的{0}%',
                  '58213': '提现前请先设置交易密码', '58300': '创建充值地址超过上限', '58350': '您的余额不足',
                  '59000': '挂单或持仓存在，无法设置', '59001': '当前存在借币，暂不可切换', '59100': '当前存在持仓，请撤销所有挂单后进行杠杆倍数修改',
                  '59101': '当前业务存在逐仓挂单，请撤销所有挂单后进行杠杆倍数修改', '59102': '杠杆倍数超过最大杠杆倍数，请重新调整杠杆倍数',
                  '59103': '杠杆倍数过低，账户中没有足够的可用保证金可以追加，请重新调整杠杆倍数',
                  '59104': '杠杆倍数过高，借币仓位已超过该杠杆倍数的最大仓位，请重新调整杠杆倍数', '59105': '杠杆倍数设置不能小于{0}，请重新调整杠杆倍数',
                  '59106': '您下单后仓位总张数所处档位的最高可用杠杆为{0}，请重新调整', '59107': '当前业务存在全仓挂单，请撤销所有挂单后进行杠杆倍数修改',
                  '59108': '杠杆倍数过低，账户中保证金不足，请重新调整杠杆倍数', '59109': '调整后，账户权益小于所需保证金，请重新调整杠杆倍数',
                  '59200': '账户余额不足', '59201': '账户余额是负数', '59300': '追加保证金失败，指定仓位不存在',
                  '59301': '调整保证金超过当前最大可调整数量', '59302': '当前仓位存在平仓挂单，请撤销平仓挂单后进行保证金修改',
                  '59401': '持仓价值达到持仓限制', '59500': '仅母账户有操作权限', '59501': '每个账户最多可创建',
                  '59502': '备注名不可以与当前已创建的APIKey备注名重复', '59503': '每个', '59504': '子账户不支持提币功能',
                  '59505': 'passphrase', '59506': 'APIKey', '59507': '转出账户和转入账户必须是同一个母账户下的2个不同的子账户',
                  '59508': '{0}该子账户被冻结'}
API_ERRORS = {'50100': 'Api', '50101': 'APIKey', '50102': '请求时间戳过期', '50103': '请求头"OK_ACCESS_KEY"不能为空',
              '50104': '请求头"OK_ACCESS_PASSPHRASE"不能为空', '50105': '请求头"OK_ACCESS_PASSPHRASE"错误',
              '50106': '请求头"OK_ACCESS_SIGN"不能为空', '50107': '请求头"OK_ACCESS_TIMESTAMP"不能为空',
              '50108': '券商ID不存在', '50109': '券商域名不存在', '50110': '无效的ip', '50111': '无效的OK_ACCESS_KEY',
              '50112': '无效的OK_ACCESS_TIMESTAMP', '50113': '无效的签名', '50114': '无效的授权', '50115': '无效的请求类型'}


class APIException(Exception):
    def __init__(self, error_code) -> None:
        self.msg = API_ERRORS.get(str(error_code), 'Unknown code:%s' % error_code)
        self.code = error_code
        super().__init__(self.msg)

    def __repr__(self) -> str:
        return f"{self.code}:{self.msg}"


class GeneralException(Exception):
    def __init__(self, error_code) -> None:
        self.msg = GENERAL_ERRORS.get(str(error_code), 'Unknown code:%s' % error_code)
        self.code = error_code
        super().__init__(self.msg)

    def __repr__(self) -> str:
        return f"{self.code}:{self.msg}"


class OkexClient(object):
    def __init__(self, api_key, api_secret, api_passphrase):
        """
        初始化客户端，注入key和secret
        :param api_key:
        :param api_secret:
        """
        self.keysecret = KeySecret(api_key, api_secret, api_passphrase)

    def uri(self, path):
        return f"https://www.okex.com{path}"

    def generate_response(self, response):
        status_code = response.status_code
        resp = response.json()
        code = int(resp.get('code'))
        if status_code >= 500:
            raise Exception('接口服务端发生未知异常')
        if status_code >= 400:
            raise APIException(code)
        if status_code < 300 and code > 0:
            raise GeneralException(code)
        return resp.get('data')

    def get_products(self):
        """
        获取产品列表
        :return:
        """


    def account_balance(self, ccy: str):
        """
        账户余额
        :param ccy: 币种 比如 BTC
        :return:
        """
        req_path = '/api/v5/account/balance?ccy=%s' % ccy
        signitrue = Signature('GET', req_path, "", self.keysecret)
        r = requests.get(self.uri(req_path), headers=signitrue.headers())
        return self.generate_response(r)

    def market_tickers(self):
        """
        行情数据
        :return:
        """
        req_path = '/api/v5/market/tickers?instType=SPOT'
        signitrue = Signature('GET', req_path, "", self.keysecret)
        r = requests.get(self.uri(req_path), headers=signitrue.headers())
        return self.generate_response(r)



